definitions:
  core_dtos.TwCreateScheduleRequest:
    properties:
      all_day:
        description: Nullable field (represented by tinyint in SQL)
        type: boolean
      assigned_to:
        description: Nullable field
        type: integer
      board_column_id:
        description: Nullable field
        type: integer
      created_by:
        description: Required field
        type: integer
      description:
        description: Nullable field
        type: string
      end_time:
        description: Nullable field
        type: string
      extra_data:
        description: Nullable field
        type: string
      location:
        description: Nullable field
        type: string
      recurrence_pattern:
        description: Nullable field
        type: string
      start_time:
        description: Nullable field
        type: string
      status:
        description: Nullable field
        type: string
      title:
        description: Nullable field
        type: string
      visibility:
        description: Nullable field
        type: string
      workspace_id:
        description: Nullable field
        type: integer
    type: object
  core_dtos.TwCreateShecduleResponse:
    properties:
      all_day:
        type: boolean
      assigned_to:
        type: integer
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwRecurrenceExceptionCreateDTO:
    properties:
      exception_date:
        type: string
      extra_data:
        type: string
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
      schedule_id:
        type: integer
    required:
    - schedule_id
    type: object
  core_dtos.TwRecurrenceExceptionResponseDTO:
    properties:
      created_at:
        type: string
      exception_date:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
      schedule_id:
        type: integer
      updated_at:
        type: string
    type: object
  core_dtos.TwRecurrenceExceptionUpdateDTO:
    properties:
      exception_date:
        type: string
      extra_data:
        type: string
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
    type: object
  core_dtos.TwScheduleResponse:
    properties:
      all_day:
        type: boolean
      assigned_to:
        items:
          type: integer
        type: array
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleRequest:
    properties:
      all_day:
        type: boolean
      assigned_to:
        type: integer
      board_column_id:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleResponse:
    properties:
      all_day:
        type: boolean
      assigned_to:
        type: integer
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.UpdateUserRequest:
    properties:
      calendarSettings:
        type: string
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updatedAt:
        type: string
    type: object
  models.TwUser:
    properties:
      calendarSettings:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      googleId:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  models.TwUserEmail:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.TwUser'
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: Timewise database management system
  title: timewise-dbms
  version: "1.0"
paths:
  /dbms/v1/recurrence_exception:
    get:
      consumes:
      - application/json
      description: Get all recurrence exceptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
            type: array
      summary: Get all recurrence exceptions
      tags:
      - recurrence_exception
    post:
      consumes:
      - application/json
      description: Create a recurrence exception
      parameters:
      - description: Recurrence Exception
        in: body
        name: recurrence_exception
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwRecurrenceExceptionCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Create a recurrence exception
      tags:
      - recurrence_exception
  /dbms/v1/recurrence_exception/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a recurrence exception
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a recurrence exception
      tags:
      - recurrence_exception
    get:
      consumes:
      - application/json
      description: Get recurrence exception by ID
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Get recurrence exception by ID
      tags:
      - recurrence_exception
    put:
      consumes:
      - application/json
      description: Update a recurrence exception
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      - description: Recurrence Exception
        in: body
        name: recurrence_exception
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwRecurrenceExceptionUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Update a recurrence exception
      tags:
      - recurrence_exception
  /dbms/v1/schedule:
    get:
      consumes:
      - application/json
      description: Get all schedules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwScheduleResponse'
            type: array
      summary: Get all schedules
      tags:
      - schedule
    post:
      consumes:
      - application/json
      description: Create a new schedule
      parameters:
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwCreateScheduleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/core_dtos.TwCreateShecduleResponse'
      summary: Create a new schedule
      tags:
      - schedule
  /dbms/v1/schedule/{schedule_id}:
    delete:
      consumes:
      - application/json
      description: Delete a schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a schedule
      tags:
      - schedule
    get:
      consumes:
      - application/json
      description: Get schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwScheduleResponse'
      summary: Get schedule by ID
      tags:
      - schedule
    put:
      consumes:
      - application/json
      description: Update an existing schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwUpdateScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwUpdateScheduleResponse'
      summary: Update an existing schedule
      tags:
      - schedule
  /dbms/v1/user_email:
    get:
      consumes:
      - application/json
      description: Get all user emails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUserEmail'
            type: array
      summary: Get all user emails
      tags:
      - user_email
    post:
      consumes:
      - application/json
      description: Create a new user email
      parameters:
      - description: User Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.TwUserEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUserEmail'
      summary: Create a new user email
      tags:
      - user_email
  /dbms/v1/user_email/{email_id}:
    delete:
      consumes:
      - application/json
      description: Delete user email by ID
      parameters:
      - description: Email ID
        in: path
        name: email_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user email by ID
      tags:
      - user_email
  /dbms/v1/user_email/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user email by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUserEmail'
      summary: Get user email by user ID
      tags:
      - user_email
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUser'
            type: array
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.TwUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Create a new user
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Get user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/core_dtos.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Update user by ID
      tags:
      - user
swagger: "2.0"
