definitions:
  board_columns_dtos.BoardColumnsRequest:
    properties:
      name:
        type: string
      position:
        type: integer
      workspace_id:
        type: integer
    type: object
  core_dtos.TwCreateScheduleRequest:
    properties:
      all_day:
        description: Nullable field (represented by tinyint in SQL)
        type: boolean
      board_column_id:
        description: Nullable field
        type: integer
      created_by:
        description: Required field
        type: integer
      description:
        description: Nullable field
        type: string
      end_time:
        description: Nullable field
        type: string
      extra_data:
        description: Nullable field
        type: string
      location:
        description: Nullable field
        type: string
      recurrence_pattern:
        description: Nullable field
        type: string
      start_time:
        description: Nullable field
        type: string
      status:
        description: Nullable field
        type: string
      title:
        description: Nullable field
        type: string
      video_transcript:
        description: Nullable field
        type: string
      visibility:
        description: Nullable field
        type: string
      workspace_id:
        description: Nullable field
        type: integer
      workspace_user_id:
        type: integer
    type: object
  core_dtos.TwCreateShecduleResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwRecurrenceExceptionCreateDTO:
    properties:
      exception_date:
        type: string
      extra_data:
        type: string
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
      schedule_id:
        type: integer
    required:
    - schedule_id
    type: object
  core_dtos.TwRecurrenceExceptionResponseDTO:
    properties:
      created_at:
        type: string
      exception_date:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
      schedule_id:
        type: integer
      updated_at:
        type: string
    type: object
  core_dtos.TwRecurrenceExceptionUpdateDTO:
    properties:
      exception_date:
        type: string
      extra_data:
        type: string
      is_cancelled:
        type: boolean
      new_end_time:
        type: string
      new_start_time:
        type: string
    type: object
  core_dtos.TwScheduleResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleRequest:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.UpdateUserRequest:
    properties:
      calendarSettings:
        type: string
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updatedAt:
        type: string
    type: object
  fiber.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  models.TwBoardColumn:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
    type: object
  models.TwComment:
    properties:
      commenter:
        type: string
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      schedule:
        $ref: '#/definitions/models.TwSchedule'
      schedule_id:
        type: integer
      updated_at:
        type: string
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwDocument:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      download_url:
        type: string
      file_name:
        type: string
      file_path:
        type: string
      file_size:
        type: integer
      file_type:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      schedule:
        $ref: '#/definitions/models.TwSchedule'
      schedule_id:
        type: integer
      updated_at:
        type: string
      uploaded_at:
        type: string
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwSchedule:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      boardColumn:
        $ref: '#/definitions/models.TwBoardColumn'
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwScheduleLog:
    properties:
      action:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      field_changed:
        type: string
      id:
        type: integer
      new_value:
        type: string
      old_value:
        type: string
      schedule:
        $ref: '#/definitions/models.TwSchedule'
      schedule_id:
        type: integer
      updated_at:
        type: string
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwScheduleParticipant:
    properties:
      assign_at:
        type: string
      assign_by:
        type: integer
      assignByUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      invitation_sent_at:
        type: string
      invitation_status:
        type: string
      response_time:
        type: string
      schedule:
        $ref: '#/definitions/models.TwSchedule'
      schedule_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwUser:
    properties:
      calendarSettings:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      googleId:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  models.TwUserEmail:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.TwUser'
      user_id:
        type: integer
    type: object
  models.TwWorkspace:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.TwWorkspaceLog:
    properties:
      action:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      field_changed:
        type: string
      id:
        type: integer
      new_value:
        type: string
      old_value:
        type: string
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
      workspace_user_id:
        type: integer
      workspaceUser:
        $ref: '#/definitions/models.TwWorkspaceUser'
    type: object
  models.TwWorkspaceUser:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_verified:
        type: boolean
      role:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_email_id:
        type: integer
      userEmail:
        $ref: '#/definitions/models.TwUserEmail'
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
      workspace_key:
        type: string
    type: object
  schedule_participant_dtos.ScheduleParticipantInfo:
    properties:
      assign_at:
        type: string
      assign_by:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      invitation_sent_at:
        type: string
      invitation_status:
        type: string
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      response_time:
        type: string
      role:
        type: string
      schedule_id:
        type: integer
      status:
        type: string
      status_workspace_user:
        type: string
      user_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  user_email_dtos.SearchUserEmailResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      profile_picture:
        type: string
    type: object
  workspace_user_dtos.GetWorkspaceUserListResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      extra_data:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_email_id:
        type: integer
      workspace_id:
        type: integer
      workspace_key:
        type: string
    type: object
  workspace_user_dtos.UpdateWorkspaceUserRoleRequest:
    properties:
      email:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
  description: Timewise database management system
  title: timewise-dbms
  version: "1.0"
paths:
  /dbms/v1/board_columns:
    post:
      consumes:
      - application/json
      description: Create board column
      parameters:
      - description: Create board column request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/board_columns_dtos.BoardColumnsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Create board column
      tags:
      - board_columns
  /dbms/v1/board_columns/{id}:
    delete:
      consumes:
      - application/json
      description: Delete board column
      parameters:
      - description: Board column ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete board column
      tags:
      - board_columns
    get:
      consumes:
      - application/json
      description: Get board column by ID
      parameters:
      - description: Board column ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Get board column by ID
      tags:
      - board_columns
    put:
      consumes:
      - application/json
      description: Update board column
      parameters:
      - description: Board column ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update board column request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/board_columns_dtos.BoardColumnsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Update board column
      tags:
      - board_columns
  /dbms/v1/board_columns/{id}/{field}:
    get:
      consumes:
      - application/json
      description: Get board column field
      parameters:
      - description: Board column ID
        in: path
        name: id
        required: true
        type: integer
      - description: Field
        in: path
        name: field
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Get board column field
      tags:
      - board_columns
    put:
      consumes:
      - application/json
      description: Update board column field
      parameters:
      - description: Board column ID
        in: path
        name: id
        required: true
        type: integer
      - description: Field
        in: path
        name: field
        required: true
        type: string
      - description: Update board column request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.TwBoardColumn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Update board column field
      tags:
      - board_columns
  /dbms/v1/comment/schedule/{schedule_id}:
    get:
      consumes:
      - application/json
      description: Get comments by schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwComment'
            type: array
      summary: Get comments by schedule
      tags:
      - comments
  /dbms/v1/document/schedule/{schedule_id}:
    get:
      consumes:
      - application/json
      description: Get documents by schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwDocument'
            type: array
      summary: Get documents by schedule
      tags:
      - document
  /dbms/v1/email_synced/{email}:
    get:
      consumes:
      - application/json
      description: Get all emails synced with an email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of emails synced with the email
          schema:
            $ref: '#/definitions/models.TwUserEmail'
        "400":
          description: Email is not synced any other emails
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get all emails synced with an email
      tags:
      - Email Synced
  /dbms/v1/recurrence_exception:
    get:
      consumes:
      - application/json
      description: Get all recurrence exceptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
            type: array
      summary: Get all recurrence exceptions
      tags:
      - recurrence_exception
    post:
      consumes:
      - application/json
      description: Create a recurrence exception
      parameters:
      - description: Recurrence Exception
        in: body
        name: recurrence_exception
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwRecurrenceExceptionCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Create a recurrence exception
      tags:
      - recurrence_exception
  /dbms/v1/recurrence_exception/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a recurrence exception
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a recurrence exception
      tags:
      - recurrence_exception
    get:
      consumes:
      - application/json
      description: Get recurrence exception by ID
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Get recurrence exception by ID
      tags:
      - recurrence_exception
    put:
      consumes:
      - application/json
      description: Update a recurrence exception
      parameters:
      - description: Recurrence Exception ID
        in: path
        name: id
        required: true
        type: integer
      - description: Recurrence Exception
        in: body
        name: recurrence_exception
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwRecurrenceExceptionUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwRecurrenceExceptionResponseDTO'
      summary: Update a recurrence exception
      tags:
      - recurrence_exception
  /dbms/v1/schedule:
    get:
      consumes:
      - application/json
      description: Get all schedules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwScheduleResponse'
            type: array
      summary: Get all schedules
      tags:
      - schedule
    post:
      consumes:
      - application/json
      description: Create a new schedule
      parameters:
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwCreateScheduleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/core_dtos.TwCreateShecduleResponse'
      summary: Create a new schedule
      tags:
      - schedule
  /dbms/v1/schedule/{schedule_id}:
    delete:
      consumes:
      - application/json
      description: Delete a schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a schedule
      tags:
      - schedule
    get:
      consumes:
      - application/json
      description: Get schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwScheduleResponse'
      summary: Get schedule by ID
      tags:
      - schedule
    put:
      consumes:
      - application/json
      description: Update an existing schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwUpdateScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwUpdateScheduleResponse'
      summary: Update an existing schedule
      tags:
      - schedule
  /dbms/v1/schedule/schedules/filter:
    get:
      consumes:
      - application/json
      description: Filter schedules
      parameters:
      - description: Workspace ID
        in: query
        name: workspace_id
        type: integer
      - description: Board Column ID
        in: query
        name: board_column_id
        type: integer
      - description: Title of the schedule (searches with LIKE)
        in: query
        name: title
        type: string
      - description: Start time of the schedule (ISO8601 format, filter by schedules
          starting after this date)
        in: query
        name: start_time
        type: string
      - description: End time of the schedule (ISO8601 format, filter by schedules
          ending before this date)
        in: query
        name: end_time
        type: string
      - description: Location of the schedule (searches with LIKE)
        in: query
        name: location
        type: string
      - description: User ID of the creator
        in: query
        name: created_by
        type: integer
      - description: Status of the schedule
        in: query
        name: status
        type: string
      - description: Filter by deleted schedules
        in: query
        name: is_deleted
        type: boolean
      - description: User ID assigned to the schedule
        in: query
        name: assigned_to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Filtered list of schedules
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwScheduleResponse'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Error'
      summary: Filter schedule
      tags:
      - schedule
  /dbms/v1/schedule_log:
    get:
      consumes:
      - application/json
      description: Get all schedule logs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwScheduleLog'
            type: array
      summary: Get all schedule logs
      tags:
      - schedule_log
    post:
      consumes:
      - application/json
      description: Create a new schedule log
      parameters:
      - description: Schedule log object
        in: body
        name: schedule_log
        required: true
        schema:
          $ref: '#/definitions/models.TwScheduleLog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleLog'
      summary: Create a new schedule log
      tags:
      - schedule_log
  /dbms/v1/schedule_log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete schedule log
      parameters:
      - description: Schedule Log ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleLog'
      summary: Delete schedule log
      tags:
      - schedule_log
    get:
      consumes:
      - application/json
      description: Get schedule log by ID
      parameters:
      - description: Schedule Log ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleLog'
      summary: Get schedule log by ID
      tags:
      - schedule_log
    put:
      consumes:
      - application/json
      description: Update schedule log
      parameters:
      - description: Schedule Log ID
        in: path
        name: id
        required: true
        type: integer
      - description: Schedule log object
        in: body
        name: schedule_log
        required: true
        schema:
          $ref: '#/definitions/models.TwScheduleLog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleLog'
      summary: Update schedule log
      tags:
      - schedule_log
  /dbms/v1/schedule_participant:
    get:
      consumes:
      - application/json
      description: Get all schedule participants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwScheduleParticipant'
            type: array
      summary: Get all schedule participants
      tags:
      - schedule_participant
    post:
      consumes:
      - application/json
      description: Create schedule participant
      parameters:
      - description: Schedule participant object
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/models.TwScheduleParticipant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleParticipant'
      summary: Create schedule participant
      tags:
      - schedule_participant
  /dbms/v1/schedule_participant/{id}:
    delete:
      consumes:
      - application/json
      description: Delete schedule participant
      parameters:
      - description: Schedule Participant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleParticipant'
      summary: Delete schedule participant
      tags:
      - schedule_participant
    get:
      consumes:
      - application/json
      description: Get schedule participant by ID
      parameters:
      - description: Schedule Participant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleParticipant'
      summary: Get schedule participant by ID
      tags:
      - schedule_participant
    put:
      consumes:
      - application/json
      description: Update schedule participant
      parameters:
      - description: Schedule Participant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Schedule participant object
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/models.TwScheduleParticipant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwScheduleParticipant'
      summary: Update schedule participant
      tags:
      - schedule_participant
  /dbms/v1/schedule_participant/workspace/{workspaceId}/schedule/{scheduleId}:
    get:
      consumes:
      - application/json
      description: Get schedule participants by schedule ID
      parameters:
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantInfo'
            type: array
      summary: Get schedule participants by schedule ID
      tags:
      - schedule_participant
  /dbms/v1/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.TwUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Create a new user
      tags:
      - user
  /dbms/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/core_dtos.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Update user by ID
      tags:
      - user
  /dbms/v1/user_email:
    get:
      consumes:
      - application/json
      description: Get all user emails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUserEmail'
            type: array
      summary: Get all user emails
      tags:
      - user_email
    post:
      consumes:
      - application/json
      description: Create a new user email
      parameters:
      - description: User Email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.TwUserEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUserEmail'
      summary: Create a new user email
      tags:
      - user_email
  /dbms/v1/user_email/{email_id}:
    delete:
      consumes:
      - application/json
      description: Delete user email by ID
      parameters:
      - description: Email ID
        in: path
        name: email_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user email by ID
      tags:
      - user_email
  /dbms/v1/user_email/email/{email}:
    get:
      consumes:
      - application/json
      description: Get user emails by email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUserEmail'
            type: array
      summary: Get user emails by email
      tags:
      - user_email
  /dbms/v1/user_email/search/{query}:
    get:
      consumes:
      - application/json
      description: Search user email
      parameters:
      - description: Query
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_email_dtos.SearchUserEmailResponse'
            type: array
      summary: Search user email
      tags:
      - user_email
  /dbms/v1/user_email/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Get user emails by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUserEmail'
            type: array
      summary: Get user emails by user ID
      tags:
      - user_email
  /dbms/v1/workspace:
    get:
      consumes:
      - application/json
      description: Get all workspaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get all workspaces
      tags:
      - workspace
    post:
      consumes:
      - application/json
      description: Create workspace
      parameters:
      - description: Workspace
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/models.TwWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      summary: Create workspace
      tags:
      - workspace
    put:
      consumes:
      - application/json
      description: Update workspace
      parameters:
      - description: Workspace
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/models.TwWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      summary: Update workspace
      tags:
      - workspace
  /dbms/v1/workspace/{workspace_id}:
    delete:
      consumes:
      - application/json
      description: Remove workspace by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Remove workspace by ID
      tags:
      - workspace
    get:
      consumes:
      - application/json
      description: Get workspace by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      summary: Get workspace by ID
      tags:
      - workspace
  /dbms/v1/workspace/{workspace_id}/board_columns:
    get:
      consumes:
      - application/json
      description: Get board columns by workspace
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwBoardColumn'
            type: array
      summary: Get board columns by workspace
      tags:
      - board_columns
  /dbms/v1/workspace/email/{email}:
    get:
      consumes:
      - application/json
      description: Get workspaces by email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by email
      tags:
      - workspace
  /dbms/v1/workspace/is_active/{is_active}:
    get:
      consumes:
      - application/json
      description: Get workspaces by is_active
      parameters:
      - description: Is Active
        in: path
        name: is_active
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by is_active
      tags:
      - workspace
  /dbms/v1/workspace/status/{status}:
    get:
      consumes:
      - application/json
      description: Get workspaces by status
      parameters:
      - description: Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by status
      tags:
      - workspace
  /dbms/v1/workspace/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Get workspaces by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by user ID
      tags:
      - workspace
  /dbms/v1/workspace_log:
    get:
      consumes:
      - application/json
      description: Get all workspace logs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspaceLog'
            type: array
      summary: Get all workspace logs
      tags:
      - workspace_log
    post:
      consumes:
      - application/json
      description: Create workspace log
      parameters:
      - description: Workspace log object
        in: body
        name: workspace_log
        required: true
        schema:
          $ref: '#/definitions/models.TwWorkspaceLog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspaceLog'
      summary: Create workspace log
      tags:
      - workspace_log
  /dbms/v1/workspace_log/{workspace_log_id}:
    delete:
      consumes:
      - application/json
      description: Remove workspace log by ID
      parameters:
      - description: Workspace log ID
        in: path
        name: workspace_log_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Remove workspace log by ID
      tags:
      - workspace_log
    get:
      consumes:
      - application/json
      description: Get workspace log by ID
      parameters:
      - description: Workspace log ID
        in: path
        name: workspace_log_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspaceLog'
      summary: Get workspace log by ID
      tags:
      - workspace_log
  /dbms/v1/workspace_user/email/{email}/workspace/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get workspaces by email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      summary: Get workspaces by email
      tags:
      - workspace
  /dbms/v1/workspace_user/invitation/workspace/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get workspace user invitation list
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse'
            type: array
      summary: Get workspace user invitation list
      tags:
      - workspace_user
  /dbms/v1/workspace_user/role/workspace/{workspace_id}:
    put:
      consumes:
      - application/json
      description: Update role of workspace user
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Update role request
        in: body
        name: workspace_user
        required: true
        schema:
          $ref: '#/definitions/workspace_user_dtos.UpdateWorkspaceUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update role of workspace user
      tags:
      - workspace_user
  /dbms/v1/workspace_user/workspace/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get workspace users by workspace ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse'
            type: array
      summary: Get workspace users by workspace ID
      tags:
      - workspace_user
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwUser'
            type: array
      summary: Get all users
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwUser'
      summary: Get user by ID
      tags:
      - user
swagger: "2.0"
